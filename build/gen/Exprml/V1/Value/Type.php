<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# NO CHECKED-IN PROTOBUF GENCODE
# source: exprml/v1/value.proto

namespace Exprml\V1\Value;

use UnexpectedValueException;

/**
 * Type of a JSON value.
 *
 * Protobuf type <code>exprml.v1.Value.Type</code>
 */
class Type
{
    /**
     * Unspecified.
     *
     * Generated from protobuf enum <code>UNSPECIFIED = 0;</code>
     */
    const UNSPECIFIED = 0;
    /**
     * Null type.
     *
     * Generated from protobuf enum <code>NULL = 1;</code>
     */
    const NULL = 1;
    /**
     * Boolean type.
     *
     * Generated from protobuf enum <code>BOOL = 2;</code>
     */
    const BOOL = 2;
    /**
     * Number type.
     *
     * Generated from protobuf enum <code>NUM = 3;</code>
     */
    const NUM = 3;
    /**
     * String type.
     *
     * Generated from protobuf enum <code>STR = 4;</code>
     */
    const STR = 4;
    /**
     * Array type.
     *
     * Generated from protobuf enum <code>ARR = 5;</code>
     */
    const ARR = 5;
    /**
     * Object type.
     *
     * Generated from protobuf enum <code>OBJ = 6;</code>
     */
    const OBJ = 6;

    private static $valueToName = [
        self::UNSPECIFIED => 'UNSPECIFIED',
        self::NULL => 'NULL',
        self::BOOL => 'BOOL',
        self::NUM => 'NUM',
        self::STR => 'STR',
        self::ARR => 'ARR',
        self::OBJ => 'OBJ',
    ];

    public static function name($value)
    {
        if (!isset(self::$valueToName[$value])) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no name defined for value %s', __CLASS__, $value));
        }
        return self::$valueToName[$value];
    }


    public static function value($name)
    {
        $const = __CLASS__ . '::' . strtoupper($name);
        if (!defined($const)) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no value defined for name %s', __CLASS__, $name));
        }
        return constant($const);
    }
}

