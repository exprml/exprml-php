<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# NO CHECKED-IN PROTOBUF GENCODE
# source: exprml/v1/encoder.proto

namespace Exprml\PB\Exprml\V1\EncodeInput;

use UnexpectedValueException;

/**
 * Format of the output string.
 *
 * Protobuf type <code>exprml.v1.EncodeInput.Format</code>
 */
class Format
{
    /**
     * JSON format.
     *
     * Generated from protobuf enum <code>JSON = 0;</code>
     */
    const JSON = 0;
    /**
     * JSON-compatible YAML format.
     *
     * Generated from protobuf enum <code>YAML = 1;</code>
     */
    const YAML = 1;

    private static $valueToName = [
        self::JSON => 'JSON',
        self::YAML => 'YAML',
    ];

    public static function name($value)
    {
        if (!isset(self::$valueToName[$value])) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no name defined for value %s', __CLASS__, $value));
        }
        return self::$valueToName[$value];
    }


    public static function value($name)
    {
        $const = __CLASS__ . '::' . strtoupper($name);
        if (!defined($const)) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no value defined for name %s', __CLASS__, $name));
        }
        return constant($const);
    }
}

